[33mcommit 3e2efb60eb1ed18aab02a924fa2cd0f98dfe4e3b[m
Author: joshp523 <joshp523@byu.edu>
Date:   Fri Mar 21 20:35:21 2025 -0600

    openAI API call

[1mdiff --git a/.env b/.env[m
[1mnew file mode 100644[m
[1mindex 0000000..c7a79c6[m
[1m--- /dev/null[m
[1m+++ b/.env[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mVITE_OPENAI_API_KEY=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[m
\ No newline at end of file[m
[1mdiff --git a/src/dashboard/dashboard.jsx b/src/dashboard/dashboard.jsx[m
[1mindex c1fc536..5e0f127 100644[m
[1m--- a/src/dashboard/dashboard.jsx[m
[1m+++ b/src/dashboard/dashboard.jsx[m
[36m@@ -1,4 +1,4 @@[m
[31m-import React, { useState } from 'react';[m
[32m+[m[32mimport React, { useState, useEffect } from 'react';[m
 import { useNavigate } from 'react-router-dom';[m
 [m
 export function Dashboard() {[m
[36m@@ -10,10 +10,14 @@[m [mexport function Dashboard() {[m
     const [aiSummary, setAiSummary] = useState("Loading AI insights...");[m
     const navigate = useNavigate();[m
 [m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        generateAiSummary();[m
[32m+[m[32m    }, []);[m
[32m+[m
     const handleTransaction = (e) => {[m
         e.preventDefault();[m
         const newTransaction = {[m
[31m-            amount: Number(amount), // Convert to number[m
[32m+[m[32m            amount: Number(amount),[m[41m [m
             type,[m
             category,[m
             notes,[m
[36m@@ -34,12 +38,76 @@[m [mexport function Dashboard() {[m
         localStorage.setItem('transactions', JSON.stringify(updatedTransactions));[m
     };[m
 [m
[32m+[m[32m    const summarizeSpending = (transactions) => {[m
[32m+[m[32m        let totalIncome = 0;[m
[32m+[m[32m        let totalExpenses = 0;[m
[32m+[m[32m        const categoryBreakdown = {};[m
[32m+[m[41m      [m
[32m+[m[32m        transactions.forEach((transaction) => {[m
[32m+[m[32m          if (transaction.type === "Income") {[m
[32m+[m[32m            totalIncome += transaction.amount;[m
[32m+[m[32m          } else if (transaction.type === "Expense") {[m
[32m+[m[32m            totalExpenses += transaction.amount;[m
[32m+[m[32m          }[m
[32m+[m[41m      [m
[32m+[m[32m          if (!categoryBreakdown[transaction.category]) {[m
[32m+[m[32m            categoryBreakdown[transaction.category] = 0;[m
[32m+[m[32m          }[m
[32m+[m[32m          categoryBreakdown[transaction.category] += transaction.amount;[m
[32m+[m[32m        });[m
[32m+[m[41m      [m
[32m+[m[32m        const summary = `[m
[32m+[m[32m          Total Income: $${totalIncome.toFixed(2)}[m
[32m+[m[32m          Total Expenses: $${totalExpenses.toFixed(2)}[m
[32m+[m[32m          Net Balance: $${(totalIncome - totalExpenses).toFixed(2)}[m
[32m+[m[32m          Category Breakdown:[m
[32m+[m[32m          ${Object.entries(categoryBreakdown)[m
[32m+[m[32m            .map(([category, amount]) => `${category}: $${amount.toFixed(2)}`)[m
[32m+[m[32m            .join("\n")}[m
[32m+[m[32m        `;[m
[32m+[m[41m      [m
[32m+[m[32m        return summary;[m
[32m+[m[32m      };[m
[32m+[m
[32m+[m[32m    async function generateAiSummary() {[m
[32m+[m[32m        const transactions = JSON.parse(localStorage.getItem('transactions')) || [];[m
[32m+[m
[32m+[m[32m        if (transactions.length === 0) {[m
[32m+[m[32m            setAiSummary("No transactions recorded yet. Start logging to get AI insights!");[m
[32m+[m[32m            return;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        const spendingSummary = summarizeSpending(transactions);[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            const response = await fetch("https://api.openai.com/v1/chat/completions", {[m
[32m+[m[32m                method: "POST",[m
[32m+[m[32m                headers: {[m
[32m+[m
[32m+[m[32m                    "Content-Type": "application/json",[m
[32m+[m[32m                    "Authorization": `Bearer ${import.meta.env.VITE_OPENAI_API_KEY}`[m
[32m+[m[32m                },[m
[32m+[m[32m                body: JSON.stringify({[m
[32m+[m[32m                    model: "gpt-3.5-turbo",[m
[32m+[m[32m                    messages: [{ role: "system", content: "You are a financial assistant providing budget insights for a young family trying to build their savings and spend responsibly. children are very important to them" },[m
[32m+[m[32m                    { role: "user", content: `Analyze my weekly expenses and provide a terse financial summary. compare spending and income over time, where the money goes, and where we could have saved.:\n${spendingSummary}` }][m
[32m+[m[32m                })[m
[32m+[m[32m            });[m
[32m+[m
[32m+[m[32m            const data = await response.json();[m
[32m+[m[32m            const aiMessage = data.choices[0].message.content;[m
[32m+[m[32m            setAiSummary(aiMessage);[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.error("Error fetching AI insights:", error);[m
[32m+[m[32m            setAiSummary("Unable to generate insights at the moment.");[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
     return ([m
         <main className='container-fluid'>[m
             <div className="item">[m
                 <h2>AI insights</h2>[m
[31m-                <div id="picture">[m
[31m-                    <img src="/placeholder.jpg" alt="Pie chart" />[m
[32m+[m[32m                <div id="ai-summary">[m
[32m+[m[32m                    <p>{aiSummary}</p>[m
                 </div>[m
             </div>[m
             <div className="item">[m
[36m@@ -98,7 +166,7 @@[m [mexport function Dashboard() {[m
             </div>[m
 [m
             <div className="item">[m
[31m-                <button  onClick={() => navigate('/transactions')}[m
[32m+[m[32m                <button onClick={() => navigate('/transactions')}[m
                     className="button2">[m
                     Transaction History[m
                 </button>[m
